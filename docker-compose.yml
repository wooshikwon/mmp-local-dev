version: '3.8'

services:
  postgresql:
    image: postgres:15
    container_name: ml-pipeline-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mlpipeline}
      POSTGRES_USER: ${POSTGRES_USER:-mluser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-database.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./scripts/seed-features.sql:/docker-entrypoint-initdb.d/02-seed.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-mluser} -d ${POSTGRES_DB:-mlpipeline}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: ml-pipeline-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  mlflow:
    build:
      context: ./mlflow
    restart: always
    ports:
      - "5002:5000"  # 포트 변경: 5001 -> 5002 (추가 포트 충돌 해결)
    command: >
      mlflow server 
      --host 0.0.0.0 
      --port 5000 
      --serve-artifacts
      --default-artifact-root /mlflow/artifacts
      --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql:5432/${POSTGRES_DB}
    volumes:
      - ./mlflow-artifacts:/mlflow/artifacts  # 호스트 디렉토리 바인드 마운트로 변경
    depends_on:
      postgresql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/2.0/mlflow/experiments/list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  feast-setup:
    image: python:3.11-slim
    container_name: ml-pipeline-feast-setup
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=postgresql
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-mlpipeline}
      - POSTGRES_USER=${POSTGRES_USER:-mluser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./feast:/feast
      - feast_registry:/feast/data
    working_dir: /feast
    command: >
      sh -c "
        pip install --no-cache-dir 'feast[postgres,redis]' &&
        echo 'Waiting for services to be ready...' &&
        sleep 30 &&
        feast apply &&
        echo 'Feature store setup completed successfully!'
      "
    restart: "no"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  feast_registry:
    driver: local

networks:
  default:
    name: ml-pipeline-network 