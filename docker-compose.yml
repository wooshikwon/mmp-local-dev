# üèóÔ∏è ML Pipeline Local Database Environment
# ÌîÑÎ°úÏ†ùÌä∏ Ïô∏Î∂ÄÏóêÏÑú ÎèÖÎ¶ΩÏ†ÅÏúºÎ°ú Ïã§ÌñâÎêòÎäî ÌÖåÏä§Ìä∏Ïö© DB Ïä§ÌÉù

version: '3.8'

services:
  # PostgreSQL - Data Warehouse + Feast Offline Store + MLflow Backend
  postgres:
    image: postgres:15-alpine
    container_name: mmp-postgres
    environment:
      POSTGRES_DB: mlpipeline
      POSTGRES_USER: mluser
      POSTGRES_PASSWORD: mlpassword
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init:/docker-entrypoint-initdb.d
      - ./sql/schemas:/opt/schemas
    networks:
      - ml-db-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mluser -d mlpipeline"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Redis - Feast Online Store + Caching
  redis:
    image: redis:7-alpine
    container_name: mmp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/etc/redis/redis.conf:ro
    command: redis-server /etc/redis/redis.conf --appendonly yes
    networks:
      - ml-db-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # MLflow Server - ÌåÄ Í≥µÏú† Ïã§Ìóò Ï∂îÏ†Å Î∞è Î™®Îç∏ Í¥ÄÎ¶¨
  mlflow:
    image: python:3.11-slim
    container_name: mmp-mlflow
    working_dir: /opt/mlflow
    environment:
      - MLFLOW_BACKEND_STORE_URI=postgresql://mluser:mlpassword@postgres:5432/mlpipeline
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/opt/mlflow/artifacts
      - MLFLOW_HOST=0.0.0.0
      - MLFLOW_PORT=5000
    ports:
      - "5000:5000"
    volumes:
      - mlflow_artifacts:/opt/mlflow/artifacts
      - ./config/mlflow:/opt/mlflow/config
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ml-db-network
    command: >
      bash -c "
        pip install mlflow[extras]==2.10.2 psycopg2-binary &&
        mlflow server 
          --backend-store-uri postgresql://mluser:mlpassword@postgres:5432/mlpipeline
          --default-artifact-root /opt/mlflow/artifacts
          --host 0.0.0.0
          --port 5000
          --serve-artifacts
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  # pgAdmin (PostgreSQL Í¥ÄÎ¶¨ UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mmp-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@mlpipeline.local
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    ports:
      - "8082:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./config/pgadmin/servers.json:/pgadmin4/servers.json:ro
    depends_on:
      - postgres
    networks:
      - ml-db-network
    restart: unless-stopped

  # Redis Commander (Redis Í¥ÄÎ¶¨ UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: mmp-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - ml-db-network
    restart: unless-stopped

# Î≥ºÎ•® Ï†ïÏùò
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  mlflow_artifacts:
    driver: local
    name: mmp-mlflow-artifacts

# ÎÑ§Ìä∏ÏõåÌÅ¨ Ï†ïÏùò
networks:
  ml-db-network:
    driver: bridge
    name: mmp-db-network
    external: false 